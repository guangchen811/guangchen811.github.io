[{"content":"Large language models (LLMs) have become increasingly popular and accessible to people without technical expertise. This has brought about a significant change not only in the AI industry but also in other fields of work. However, faced with so many different LLMs, how do we choose different LLMs to maximize their help to our work and life? For example, when we want to polish an article, should we open a ChatGPT dialog box, or should we transfer it to Notion for processing by Notion AI?\nIn this blog, I will compare the following LLMs: ChatGPT, GPT-4, New Bing, and Notion AI. Besides, Baidu have release their large multi-modal model, Wenxin Yiyan. I\u0026rsquo;ll add the comparision with Wenxin Yiyan after get the access to it. I hope this blog can help you select the right LLM to assist your work and life. If you are not interested in the specific experiments, please directly refer to the takeaways.\nBrief Introduction to Each LLM ChatGPT \u0026amp; GPT-4 ChatGPT: A model that is trained to follow an instruction in a prompt and provide a detailed response. It is a sibling model to InstructGPT. There are two versions of ChatGPT being tested here (Default and Legacy). Default is a version optimized by OpenAI for ChatGPT Plus users for faster response time. Legacy is the version that OpenAI made available to ChatGPT Plus users before the release of GPT-4. Default version has better consistency compared to Legacy version.\nGPT-4: A large multimodal model that accepts image and text inputs, and emits text outputs. It exhibits human-level performance on various professional and academic benchmarks, although it is less capable than humans in many real-world scenarios. Here, we only test its ability on language-related tasks.\nThe following flowchart illustrates their general working principle. They achieves multi-turn dialogue by taking historical information and new questions as inputs together.\nOverall working principle of ChatGPT series models. New Bing New Bing: A search engine enhanced by GPT-4. Bing searches for relevant content across the web and then summarizes what it finds to generate a helpful response. It also cites its sources, so you\u0026rsquo;re able to see links to the web content it references.\nAs shown in the flowchart below, New Bing summarizes user input into search keywords and uses a search engine to perform a search. Afterwards, it compiles the search responses and the user\u0026rsquo;s question together as input to formulate its response.\nOverall working principle of New Bing.\rNotion AI Notion AI: A connected assistant that helps you think bigger, work faster, and augments your creativity, right inside the functional workspace you’re already familiar with. Compared with other LLMs, Notion AI is integrated in notion pages, which are more focused on content-related questions. Thus, if your day-to-day involves reading docs, writing content, or taking notes, Notion AI can make you more efficient.\nIf there is text available on the corresponding page, Notion AI will use the selected text in Notion Pages (or all of the text if none is selected) as a part of the model input, in order to obtain a contextually relevant response.\nOverall working principle of Notion AI.\rWhich Prompts and Why These Prompts To compare the performance of these LLMs, I will use a set of prompts that encompass a variety of use cases. The selected prompts will test each model\u0026rsquo;s ability to handle different types of tasks, including factual information, creative writing, problem-solving, and more.\nGeneral knowledge question: \u0026ldquo;What is photosynthesis?\u0026rdquo; Resolving technical issues: \u0026ldquo;Please provide me with the easiest method to set up a visually appealing terminal on a Mac. The steps should be detailed and feasible.\u0026rdquo; Text adjustment: \u0026ldquo;Add a number at the beginning of each paragraph in the following content. Replace all \u0026quot; with '. If a sentence starts with \u0026lsquo;a\u0026rsquo;, please replace it with an uppercase letter. Otherwise, keep it unchanged. Bold all sentences with more than ten words.\u0026rdquo; Literature collection and organization: \u0026ldquo;Providing important literature in the development process of generative diffusion model.\u0026rdquo; time-awareness and connectivity: \u0026ldquo;What is today\u0026rsquo;s date and day of the week? How is the weather?\u0026rdquo; These prompts were chosen because they represent a diverse range of tasks and require different levels of understanding, creativity, and problem-solving skills. By using these prompts, we can gain insights into each LLM\u0026rsquo;s strengths and weaknesses. Note: The applications of LLMs are very extensive, and here I only test some representative and general applications. It is hoped that these tests will inspire practitioners from various industries in choosing appropriate models for their specific needs.\nLLM Comparison Results General knowledge question Prompt: What is photosynthesis?\nChatGPT (Default)\rPhotosynthesis is the process by which green plants, algae, and some bacteria convert light energy from the sun into chemical energy in the form of organic compounds. During photosynthesis, carbon dioxide and water are combined to produce glucose (a type of sugar) and oxygen gas. This process takes place in specialized organelles called chloroplasts, which contain a green pigment called chlorophyll that absorbs light energy.\nPhotosynthesis can be summarized by the following equation:\n6 CO2 + 6 H2O + light energy → C6H12O6 + 6 O2\nIn this equation, carbon dioxide (CO2) and water (H2O) are the reactants, while glucose (C6H12O6) and oxygen gas (O2) are the products. Photosynthesis is essential to life on Earth, as it provides the energy that fuels the majority of ecosystems and supports the growth and survival of plants and other photosynthetic organisms.\nChatGPT (Legacy)\rPhotosynthesis is the process by which green plants, algae, and some bacteria convert light energy into chemical energy in the form of organic compounds, such as glucose. This process takes place in the chloroplasts of the plant cells, and it is the main source of energy for almost all living organisms on Earth. During photosynthesis, carbon dioxide and water are taken in and converted into glucose and oxygen, with the latter being released into the atmosphere as a waste product. The glucose produced is used by the plant as a source of energy and building material, while the oxygen is used by other organisms for respiration. In summary, photosynthesis is a crucial process that provides the energy needed for life on Earth, and it also helps regulate the levels of atmospheric oxygen and carbon dioxide.\nGPT-4\rPhotosynthesis is a vital biological process that occurs in plants, algae, and some bacteria, enabling them to convert sunlight into chemical energy. This process is essential for life on Earth, as it is the primary means by which oxygen is produced and carbon dioxide is removed from the atmosphere.\nDuring photosynthesis, organisms absorb sunlight through pigments such as chlorophyll, which is predominantly found in the chloroplasts of plant cells. The energy from sunlight is then used to convert carbon dioxide (CO2) and water (H2O) into glucose (C6H12O6), a simple sugar that serves as an energy source for the organism. Oxygen (O2) is produced as a byproduct and released into the atmosphere.\nThe overall equation for photosynthesis can be represented as:\n6CO2 + 6H2O + sunlight → C6H12O6 + 6O2\nPhotosynthesis consists of two main stages: the light-dependent reactions and the light-independent reactions (also known as the Calvin cycle). The light-dependent reactions occur in the thylakoid membranes of the chloroplasts and generate ATP (adenosine triphosphate) and NADPH (nicotinamide adenine dinucleotide phosphate), which are energy-rich molecules. The light-independent reactions, on the other hand, occur in the stroma of the chloroplasts and use the energy from ATP and NADPH to fix carbon dioxide into glucose and other organic molecules.\nPhotosynthesis is crucial for maintaining the balance of oxygen and carbon dioxide in the atmosphere and serves as the basis of the food chain, as plants are primary producers that support the energy needs of other organisms.\nNew Bing\rPhotosynthesis is a process by which plants and some other organisms use sunlight to make their own food from carbon dioxide and water [1] [2]. It also produces oxygen as a by-product [2] [3]. Photosynthesis is essential for life on Earth because it provides oxygen and organic compounds that can be used as energy sources2.\nFor more information: 1. bing.com 2. nationalgeographic.org 3. britannica.com 4.en.wikipedia.org\nNotion AI\rPhotosynthesis is the process by which green plants and some other organisms use sunlight to synthesize foods with the help of chlorophyll.\nPerformance The responses from ChatGPT (Default) and GPT-4 provide comprehensive explanations of photosynthesis, including the reactants and products, the role of chlorophyll, the two main stages of photosynthesis, and its significance for life on Earth. ChatGPT (Legacy) provides a simpler explanation of the process and its importance. On the other hand, New Bing\u0026rsquo;s response is brief and summarizes the basic information about photosynthesis. Notion AI\u0026rsquo;s response is the least informative, providing only a general description of the process. Overall, ChatGPT (Default) and GPT-4 provide the most detailed and informative explanations of photosynthesis.\nResolving technical issues Please provide me with the easiest method to set up a visually appealing terminal on a Mac. The steps should be detailed and feasible.\nChatGPT (Default)\rCertainly! Here are the detailed steps to set up a visually appealing terminal on a Mac:\nInstall a terminal emulator: The default terminal emulator on Mac is Terminal, but you can also install third-party terminal emulators such as iTerm2 or Hyper. Install a color scheme: You can use a color scheme to customize the appearance of your terminal. There are many free color schemes available online, such as Solarized, Dracula, or One Dark. To install a color scheme, you can follow these steps: Download the color scheme file (usually a .terminal or .itermcolors file). Open the Terminal preferences by pressing Command + ,. Go to the \u0026ldquo;Profiles\u0026rdquo; tab and click on the \u0026ldquo;Import\u0026rdquo; button. Select the downloaded color scheme file and click \u0026ldquo;Open\u0026rdquo;. The new color scheme will be added to your list of profiles. Install a custom font: You can use a custom font to change the appearance of the text in your terminal. Some popular fonts for programming include Fira Code, Source Code Pro, or JetBrains Mono. To install a font, you can follow these steps: Download the font file (usually a .ttf or .otf file). Double-click on the downloaded file to open the Font Book application. Click on the \u0026ldquo;Install Font\u0026rdquo; button to install the font. Configure the terminal settings: You can customize the terminal settings to change the font size, enable transparency, or add custom command prompts. To access the terminal settings, follow these steps: Open the Terminal preferences by pressing Command + ,. Go to the \u0026ldquo;Profiles\u0026rdquo; tab and select the profile you want to customize. Click on the \u0026ldquo;Advanced\u0026rdquo; tab to access more settings, such as text encoding or ANSI colors. Modify the settings to your liking and click \u0026ldquo;OK\u0026rdquo; to save the changes. By following these steps, you should be able to set up a visually appealing terminal on your Mac. ChatGPT (Legacy)\rSetting up a visually appealing terminal on a Mac can be done using a few steps. Here\u0026rsquo;s a detailed guide on how to do it:\nInstall iTerm2: iTerm2 is a popular terminal emulator for Mac. It offers features like split-pane viewing, hotkey window, and search that make it a great choice for a visually appealing terminal. You can download and install iTerm2 from https://www.iterm2.com/.\nInstall a color scheme: iTerm2 supports a wide range of color schemes that you can choose from to customize your terminal. Some popular color schemes include Solarized, Monokai, and Tomorrow Night. You can find a list of color schemes at https://github.com/mbadolato/iTerm2-Color-Schemes. To install a color scheme, simply download the .itermcolors file and import it into iTerm2 using the \u0026ldquo;Preferences\u0026rdquo; \u0026gt; \u0026ldquo;Profiles\u0026rdquo; \u0026gt; \u0026ldquo;Colors\u0026rdquo; \u0026gt; \u0026ldquo;Color Presets\u0026rdquo; \u0026gt; \u0026ldquo;Import\u0026rdquo; option.\nInstall a font: iTerm2 also supports a wide range of fonts. Some popular choices for terminal fonts include Inconsolata, Hack, and Monaco. You can download and install a font of your choice. Once you have the font installed, you can set it as the default font for iTerm2 by going to \u0026ldquo;Preferences\u0026rdquo; \u0026gt; \u0026ldquo;Profiles\u0026rdquo; \u0026gt; \u0026ldquo;Text\u0026rdquo; \u0026gt; \u0026ldquo;Change Font\u0026rdquo;.\nSet up a profile: iTerm2 allows you to create multiple profiles, each with its own set of preferences, color schemes, and fonts. To create a profile, go to \u0026ldquo;Preferences\u0026rdquo; \u0026gt; \u0026ldquo;Profiles\u0026rdquo; \u0026gt; \u0026quot; + \u0026quot; to create a new profile. You can then set the default color scheme and font for this profile.\nCustomize your terminal: Finally, you can further customize your terminal by adjusting its appearance and behavior. For example, you can change the background color, transparency, and blur. You can also change the cursor style and appearance, and set up hotkeys for frequently used commands.\nBy following these steps, you can set up a visually appealing terminal on your Mac that is both functional and aesthetically pleasing.\nGPT-4\rTo set up a visually appealing terminal on a Mac, you can use the built-in Terminal app and customize it or install a third-party terminal emulator like iTerm2. Here, we\u0026rsquo;ll guide you through customizing the built-in Terminal app for simplicity.\nOpen Terminal:\nNavigate to your Applications folder, then open the Utilities folder and double-click on Terminal.\nAccess Terminal Preferences:\nIn the top-left corner of the screen, click on the \u0026ldquo;Terminal\u0026rdquo; menu and then choose \u0026ldquo;Preferences\u0026rdquo; from the drop-down menu.\nChoose a pre-built theme:\nIn the Preferences window, you\u0026rsquo;ll see the \u0026ldquo;Profiles\u0026rdquo; tab. Here, you can choose from several pre-built themes. Select a theme that appeals to you by clicking on it.\nCustomize the selected theme:\nOnce you have chosen a theme, you can further customize its appearance. Here are some options you can modify:\nText: Click the \u0026ldquo;Text\u0026rdquo; tab to change the font, size, and color of the text in the terminal. Choose a font and size that are easy to read and a color that contrasts well with the background.\nBackground: In the \u0026ldquo;Window\u0026rdquo; tab, you can adjust the background color or set a custom image as the background. Choose a color or image that complements the text color for better visibility.\nCursor: Navigate to the \u0026ldquo;Cursor\u0026rdquo; tab to change the shape and color of the cursor. Opt for a shape and color that are easily noticeable against the background.\nWindow settings: Under the \u0026ldquo;Window\u0026rdquo; tab, you can set the terminal window size, position, and transparency. Adjust these settings according to your preference.\nSet the customized theme as default:\nIn the \u0026ldquo;Profiles\u0026rdquo; tab, click on the gear icon at the bottom of the theme list and select \u0026ldquo;Set as Default\u0026rdquo; to make the customized theme your default terminal profile.\nSave your changes:\nClose the Preferences window, and the changes you made will be automatically saved.\nNew Bing\rOne possible method to set up a visually appealing terminal on a Mac is:\nOpen the Terminal app from the Applications/Utilities folder or use Spotlight to search for it. In the Terminal menu bar, click on Terminal \u0026gt; Preferences. In the Preferences window, select the Profiles tab. This section will let you adjust the appearance of the Terminal window [1]. You can choose from a list of preset profiles on the left sidebar or create your own by clicking on the + button at the bottom [2] [1]. You can change various settings such as background and text color, font type and size, cursor type and color, window size and position, etc. by clicking on different tabs such as Text, Window, Shell, etc. [2] [1]. To apply your changes, click on Default at the bottom of the sidebar. This will make your selected profile the default one for new Terminal windows [2] [1]. You can also customize some aspects of how Terminal behaves by selecting the General tab in Preferences. For example, you can choose what to show on the title bar of Terminal windows, how to handle closing windows or tabs, how many lines of scrollback to keep in memory, etc. [2] [1]. For more details: maketecheasier.com makeuseof.com appleinsider.com Notion AI\rIf you spend a lot of time working on the terminal, it\u0026rsquo;s important to make it visually appealing and comfortable to use. Here are the steps to set up a visually appealing terminal on your Mac:\nInstall iTerm2: iTerm2 is a more powerful terminal emulator compared to the default Terminal app on Mac. Download and install iTerm2 from https://iterm2.com/. Install Oh My Zsh: Oh My Zsh is a popular framework for managing Zsh configurations. You can install it by running the following command on your terminal: sh -c \u0026#34;$(curl -fsSL \u0026lt;https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh\u0026gt;)\u0026#34; Choose a theme: Oh My Zsh comes with several themes that you can choose from. You can view the list of available themes by running the following command: ls ~/.oh-my-zsh/themes/ To set a theme, open the .zshrc file in your home directory using a text editor and change the ZSH_THEME variable to the name of the theme you want to use. For example:\nZSH_THEME=\u0026#34;agnoster\u0026#34; Save the file and reload your terminal for the changes to take effect.\nInstall Powerline fonts: Powerline fonts are a set of fonts that contain special characters used by some terminal themes. You can download and install them from https://github.com/powerline/fonts. Once installed, set the font of your terminal to a Powerline font. Customize the prompt: You can customize the prompt to display useful information such as the current directory, Git branch, and more. To do this, open the .zshrc file in your home directory and modify the PROMPT variable. For example: PROMPT=\u0026#39;%n@%m:%~$(git_prompt_info) $ \u0026#39; Save the file and reload your terminal for the changes to take effect.\nWith these steps, you should now have a visually appealing and comfortable to use terminal on your Mac.\nPerformance Apart from New Bing, all other models provided specific steps for execution. I am confident that with further conversation, each model can provide concrete and actionable steps. New Bing, however, appears to be more inclined towards providing relevant reference documents. Of course, this does not mean that New Bing lacks the relevant capabilities since it is based on GPT-4. However, as a search tool, this may not be its most suitable way of functioning.\nText adjustment Add a number at the beginning of each paragraph in the following content. Replace all \u0026quot; with '. If a sentence starts with \u0026lsquo;a\u0026rsquo;, please replace it with an lowercase letter. Otherwise, keep it unchanged. Bold all sentences with more than ten words. Here is the content:\nAmidst the whirlwind of technological advancements, ChatGPT has revolutionized the way people communicate and access information. \u0026#34;Always available, always accurate,\u0026#34; the AI-powered tool offers unparalleled assistance, transcending language barriers and cultural differences.\rAs a result, users can quickly and efficiently find answers to questions and solve problems that once seemed insurmountable. Now, please show me the modified content.\nChatGPT (Default)\rAmidst the whirlwind of technological advancements, ChatGPT has revolutionized the way people communicate and access information. \u0026lsquo;Always available, always accurate,\u0026rsquo; the AI-powered tool offers unparalleled assistance, transcending language barriers and cultural differences.\nAs a result, users can quickly and efficiently find answers to questions and solve problems that once seemed insurmountable.\nChatGPT (Legacy)\rAmidst the whirlwind of technological advancements, ChatGPT has revolutionized the way people communicate and access information. \u0026ldquo;Always available, always accurate,\u0026rdquo; the AI-powered tool offers unparalleled assistance, transcending language barriers and cultural differences.\nAs a result, users can quickly and efficiently find answers to questions and solve problems that once seemed insurmountable.\nGPT-4\rAmidst the whirlwind of technological advancements, ChatGPT has revolutionized the way people communicate and access information. \u0026lsquo;Always available, always accurate,\u0026rsquo; the AI-powered tool offers unparalleled assistance, transcending language barriers and cultural differences.\nAs a result, users can quickly and efficiently find answers to questions and solve problems that once seemed insurmountable.\nNew Bing\rHere is the modified content:\nAmidst the whirlwind of technological advancements, ChatGPT has revolutionized the way people communicate and access information. \u0026lsquo;Always available, always accurate,\u0026rsquo; the AI-powered tool offers unparalleled assistance, transcending language barriers and cultural differences.\nAs a result, users can quickly and efficiently find answers to questions and solve problems that once seemed insurmountable.\nNotion AI\rAmidst the whirlwind of technological advancements, ChatGPT has revolutionized the way people communicate and access information. \u0026lsquo;Always available, always accurate,\u0026rsquo; the AI-powered tool offers unparalleled assistance, transcending language barriers and cultural differences.\nAs a result, users can quickly and efficiently find answers to questions and solve problems that once seemed insurmountable.\nPerformance Apart from GPT-4, none of the other models fully met the peculiar requirements I presented. However, LLMs have shown the potential to replace regular expressions in performing long text matching and replacement tasks.\nLiterature collection and organization Providing important literature in the development process of generative diffusion model.\nChatGPT (Default)\rThe Generative Diffusion Model (GDM) is a recent deep learning approach that has been shown to achieve state-of-the-art results in image generation, audio synthesis, and text generation. In the development of GDM, several important literature have contributed to its advancement. Below are some of the important literature that can be helpful in the development process of GDM:\n\u0026ldquo;Improved Variational Inference with Inverse Autoregressive Flow\u0026rdquo; by Diederik P. Kingma et al. (2016): This paper introduces a technique called Inverse Autoregressive Flow (IAF) that can be used to improve the performance of variational autoencoders (VAEs), which are a key component of GDM. IAF provides a more flexible way of modeling the posterior distribution of the latent variables in VAEs, which can improve their performance in complex generative tasks.\n\u0026ldquo;Density Estimation Using Real NVP\u0026rdquo; by Laurent Dinh et al. (2017): This paper introduces a technique called Real Non-Volume Preserving (Real NVP) flows, which is a type of normalizing flow that can be used to model complex high-dimensional probability distributions. Real NVP is an important building block of GDM, as it provides a way of modeling the complex dynamics of the diffusion process that is used in GDM.\n\u0026ldquo;Generative Models and Model Criticism via Optimized Maximum Mean Discrepancy\u0026rdquo; by Dougal Maclaurin et al. (2015): This paper introduces a technique called Maximum Mean Discrepancy (MMD), which is a way of comparing probability distributions based on their mean embeddings. MMD is an important tool in the evaluation of generative models, as it provides a way of quantifying the quality of the generated samples.\n\u0026ldquo;Improved Techniques for Training GANs\u0026rdquo; by Tim Salimans et al. (2016): This paper introduces several techniques for training Generative Adversarial Networks (GANs), which are another type of generative model that is closely related to GDM. Many of the techniques introduced in this paper, such as minibatch discrimination and virtual batch normalization, can be applied to GDM to improve its performance.\n\u0026ldquo;Denoising Diffusion Probabilistic Models\u0026rdquo; by Jonathan Ho et al. (2020): This paper introduces a technique called Denoising Diffusion Probabilistic Models (DDPM), which is a variant of GDM that is designed to improve the quality of the generated samples. DDPM adds a denoising step to the diffusion process used in GDM, which can lead to higher quality samples and faster convergence.\nThese are just a few examples of the important literature that can be useful in the development of GDM. There are many other papers and techniques that can be helpful as well, depending on the specific application and requirements of the model.\nChatGPT (Legacy)\rThe development of generative diffusion models has been an active area of research in recent years, and there have been several important papers in this field. Here are some of the most influential papers in the development of generative diffusion models:\nVariational Inference for Diffusion Processes (2018), by Johannes Johansson, Fredrik Lindsten, and Thomas B. Schön\nNeural SDEs (2019), by Yingzhen Li, Jian Guo, and Yves-Alexandre de Montjoye\nScaling Limits of Diffusion-Type Models for Generative Learning (2019), by Hanjun Dai, Bo Dai, and Le Song\nGenerative Diffusion Models (2020), by Yao Liu, Jiaming Song, Stefano Ermon, and Le Song\nDiffusion Generative Adversarial Networks (2021), by Wei-Cheng Chang, Bo Dai, and Le Song\nThese papers provide a foundation for the development of generative diffusion models and demonstrate the effectiveness of these models in various applications, including generative learning, generative adversarial networks, and variational inference. These papers have helped to advance the field of generative diffusion models and have inspired many other researchers to pursue further work in this area.\nGPT-4\rGenerative diffusion models have advanced significantly in recent years, and their development is rooted in a number of important papers and literature in the field. Here are some key publications that have contributed to the development of generative diffusion models:\nDenosing Score Matching and the SDEs (Song, J., Zhao, S., \u0026amp; Ermon, S., 2021): This paper introduces a training principle called denoising score matching (DSM) for generative models, which learns score functions of the data distribution by training on pairs of noisy and clean data points. The paper also provides a connection between DSM and stochastic differential equations (SDEs), which paved the way for generative diffusion models.\nScore-Based Generative Modeling through Stochastic Differential Equations (Song, J., Zhou, Y., Zhao, S., \u0026amp; Ermon, S., 2021): This paper extends the idea of denoising score matching and SDEs and provides a framework for score-based generative modeling with SDEs, which is the foundation of generative diffusion models.\nNCSN++: Analyzing and Improving Neural Conditional Score Networks (Denoising Diffusion Probabilistic Models) (Song, J., Zhao, S., \u0026amp; Ermon, S., 2021): This paper investigates the properties of denoising score networks and provides several techniques for improving their performance, including architectural changes and multi-scale training.\nImproved Denoising Diffusion Probabilistic Models (Dhariwal, P., \u0026amp; Nichol, A., 2021): This paper introduces several advancements for denoising diffusion probabilistic models, such as improved training techniques and better hyperparameters that result in state-of-the-art performance on image synthesis tasks.\nOn the Connection Between Denosing Score Matching and Contrastive Divergence (Grathwohl, W., Song, J., Zhao, S., \u0026amp; Ermon, S., 2021): This work explores the connections between denoising score matching (DSM) and contrastive divergence (CD), which is another popular approach for training energy-based models. The paper shows that DSM can be interpreted as a special case of CD with a particular choice of noise distribution.\nThese publications, among others, have played a pivotal role in the development and understanding of generative diffusion models. As the field continues to progress, further advancements are likely to emerge from both foundational research and practical applications.\nNew Bing\rHello, this is Bing. I can help you find some literature on generative diffusion model. Generative diffusion model is a powerful new type of deep generative model that has achieved record-breaking performance in many applications, such as image synthesis, video generation, and molecule design [1]. Some important papers on this topic are:\nA Survey on Generative Diffusion Model [2], which provides a comprehensive overview of the methods and applications of generative diffusion model. Diffusion Models: A Comprehensive Survey of Methods and Applications [1], which categorizes the research on diffusion models into three key areas: efficient sampling, improved likelihood estimation, and conditional generation. Variational Diffusion Models [3], which introduces a family of diffusion-based generative models that obtain state-of-the-art likelihoods on standard image density estimation benchmarks. I hope this helps you with your research.😊\nFor more information: arxiv.org arxiv.org arxiv.org\nNotion AI\rIn order to enhance the development process of generative diffusion model, it is important to consider the following literature:\n\u0026ldquo;Causal Inference in Statistics: An Overview\u0026rdquo; by Judea Pearl \u0026ldquo;Counterfactual Fairness\u0026rdquo; by Matt Kusner et al. \u0026ldquo;The Do-Calculus Revisited\u0026rdquo; by Jonas Peters et al. These resources provide valuable insights and methodologies for understanding causal relationships and making predictions based on causal inference. By incorporating these concepts into the generative diffusion model, we can improve the accuracy and effectiveness of the model in predicting outcomes and understanding the underlying causal mechanisms.\nIt is important to note that causal inference is a complex and evolving field, and continued research and development is necessary to fully leverage its potential in data science and machine learning.\nPerformance Due to the assistance of search engines, New Bing can provide the latest and most authentic reference documents. However, the GPT series models can only provide documents up to September 2021, and only the articles provided by GPT-4 are most relevant to the requirements. In comparison, the articles provided by Notion AI completely deviate from my needs.\nTime-awareness and connectivity What is today\u0026rsquo;s date and day of the week? How is the weather?\nChatGPT (Default)\rToday\u0026rsquo;s date is March 19th, 2023. It is a Sunday.\nAs an AI language model, I do not have direct access to the current weather conditions. However, I can suggest that you check a weather website or app for the most up-to-date weather information in your location.\nChatGPT (Legacy)\rToday\u0026rsquo;s date is March 19th, 2023. The day of the week is Saturday. As an AI language model, I don\u0026rsquo;t have the ability to access real-time information about the weather. But you can check a weather website or app for the most up-to-date information.\nGPT-4\rToday\u0026rsquo;s date is March 19, 2023, and it is a Sunday. As an AI language model, I do not have real-time information or the ability to access current weather conditions. Please check a local weather source or a weather website for up-to-date information on the weather in your area.\nNew Bing\rHello, this is Bing. I can help you find out today’s date and day of the week. According to [1], today’s date is Friday March 17, 2023. It is the 77th day of the year, the 11th week of the year, and the 3rd month of the year. It is also a leap year and daylight saving time is in effect.\nTo answer your second question, I need to know your location or zip code so I can search for the weather information. Can you please tell me where you are?\nFor more information: calendardate.com timeanddate.com rapidtables.com\nNotion AI\rToday is {insert date} and it is {insert day of the week}. As for the weather, it is {insert current weather condition}.\nPerformance Notion AI is unable to retrieve time and network information completely. It is unclear how the GPT series models can identify time (although ChatGPT Legacy version provides time with a one-day deviation). As expected, New Bing knows today\u0026rsquo;s time. After providing location information, New Bing can also naturally obtain weather information. However, other models can only provide websites for obtaining weather information.\nComparison and Analysis of Application Scenarios Based on the above experiments, we can summarize the capabilities of various LLM models as follows.\nModel Photosynthesis Explanation Interaction Style Text Matching \u0026amp; Replacement Reference Docs Reference Accuracy Time \u0026amp; Network Info ChatGPT (Default) Comprehensive, detailed Conversational, informative Partially met Up to Sep 2021 Moderate Partially met ChatGPT (Legacy) Simpler explanation Conversational, informative Partially met Up to Sep 2021 Moderate Partially met GPT-4 Comprehensive, detailed Conversational, informative Fully met Up to Sep 2021 Good Partially met New Bing Brief summary Search-oriented Partially met Latest \u0026amp; authentic Excellent Fully met Notion AI General description Conversational, less detailed Partially met Irrelevant Poor Not met Once again, it should be emphasized that the capabilities mentioned here are only representative parts of the overall capabilities of LLMs. The purpose of this article is not to list all their possible applications, but to make readers aware that different LLMs have their respective strengths and work in different ways.\nTakeaways When you want to understand a professional concept, the GPT series can provide you with the most direct and easy-to-understand explanation. When you want to further deepen your understanding, New Bing can help you better find related professional literature. When you need to follow specific steps to solve a problem, and you don\u0026rsquo;t necessarily need to understand the underlying principles, such as installing an operating system as a designer, GPT series can provide you with detailed step-by-step instructions. If you need to proofread, perform regular expression replacement, summarize, rewrite or perform other tasks on long texts, it is highly recommended to use GPT-4. If you need to search for professional literature or other content where authenticity is crucial, it is recommended to use New Bing. If you need to access real-time content, it is recommended to use New Bing. If you need to perform context-based modification, refinement or make daily records based on a piece of your own written text, it is recommended to use Notion AI. Conclusion Overall, ChatGPT and GPT-4 performed exceptionally well across all tasks, showcasing their versatility and effectiveness in various use cases. New Bing is a reliable choice for information retrieval and summarization, but it may not be the best option for creative or opinion-based tasks. Notion AI, while offering valuable assistance within its platform, may not be the most suitable choice for more in-depth or technical inquiries.\nUltimately, the choice of LLM will depend on your specific needs and preferences. If you\u0026rsquo;re looking for an all-rounder with strong performance in diverse tasks, ChatGPT and GPT-4 are excellent choices. For focused research and summarization, New Bing is a reliable option. If you\u0026rsquo;re already a Notion user and need assistance within the platform, Notion AI can help improve your productivity.\nApart from the inherent abilities of LLMs, there are various applications designed based on these abilities, such as New Bing and Notion AI, which have brought convenience to people\u0026rsquo;s lives in different ways. However, there are still many needs for specific product designs, such as personalized products that can capture a user\u0026rsquo;s interaction history to better understand their needs and preferences for more efficient conversations. Nonetheless, such products must address privacy concerns. It is hoped that similar products will be developed to solve these issues and made available to everyone.\n","permalink":"https://guangchen811.github.io/llm/prompt_comparation/","summary":"Large language models (LLMs) have become increasingly popular and accessible to people without technical expertise. This has brought about a significant change not only in the AI industry but also in other fields of work. However, faced with so many different LLMs, how do we choose different LLMs to maximize their help to our work and life? For example, when we want to polish an article, should we open a ChatGPT dialog box, or should we transfer it to Notion for processing by Notion AI?","title":"Choosing the Right LLM: A Comparison of ChatGPT, GPT-4, New Bing, and Notion AI for Different Scenarios"},{"content":"If you\u0026rsquo;re a Windows user and looking for a way to customize your PowerShell prompt, then Oh My Posh might be just what you need. Oh My Posh is an open-source, community-driven framework for managing your PowerShell prompt configuration. In this tutorial, we will go through the steps to install and configure Oh My Posh.\nPrerequisites Windows 10 or above PowerShell 5 or above .NET Framework 4.7.2 or above Git Installation Open PowerShell with administrative privileges. Run the following command to install the required modules: Close the PowerShell window. Configuration Open PowerShell with administrative privileges. Run the following command to open your PowerShell profile in Notepad: Install-Module posh-git -Scope CurrentUser\rInstall-Module oh-my-posh -Scope CurrentUser Close the PowerShell window. Configuration Open PowerShell with administrative privileges.\nRun the following command to open your PowerShell profile in Notepad:\nnotepad $PROFILE If you don\u0026rsquo;t have a profile yet, Notepad will prompt you to create one. Choose \u0026ldquo;Yes\u0026rdquo;.\nIn Notepad, add the following lines to your profile:\nImport-Module oh-my-posh\rSet-PoshPrompt -Theme agnoster The first two lines import the required modules, and the third line sets the prompt theme to agnoster. You can choose a different theme by replacing agnoster with the name of the theme you want to use. A list of available themes can be found on the Oh My Posh GitHub page.\nSave and close the file.\nRestart PowerShell.\nCustomization If you want to customize your prompt further, you can create a file named Microsoft.PowerShell_profile.ps1 in your Documents folder (C:\\Users\\\u0026lt;username\u0026gt;\\Documents\\WindowsPowerShell), and add your customizations there. This file will be loaded every time you open PowerShell.\nFor example, you can change the colors of your prompt like this:\n$Colors = @{ \u0026#39;Black\u0026#39; = \u0026#39;#000000\u0026#39; \u0026#39;DarkGray\u0026#39; = \u0026#39;#808080\u0026#39; \u0026#39;Blue\u0026#39; = \u0026#39;#0000FF\u0026#39; \u0026#39;DarkBlue\u0026#39; = \u0026#39;#003366\u0026#39; \u0026#39;Green\u0026#39; = \u0026#39;#008000\u0026#39; \u0026#39;DarkGreen\u0026#39; = \u0026#39;#336633\u0026#39; \u0026#39;Cyan\u0026#39; = \u0026#39;#00FFFF\u0026#39; \u0026#39;DarkCyan\u0026#39; = \u0026#39;#008B8B\u0026#39; \u0026#39;Red\u0026#39; = \u0026#39;#FF0000\u0026#39; \u0026#39;DarkRed\u0026#39; = \u0026#39;#8B0000\u0026#39; \u0026#39;Magenta\u0026#39; = \u0026#39;#FF00FF\u0026#39; \u0026#39;DarkMagenta\u0026#39; = \u0026#39;#800080\u0026#39; \u0026#39;Yellow\u0026#39; = \u0026#39;#FFFF00\u0026#39; \u0026#39;DarkYellow\u0026#39; = \u0026#39;#808000\u0026#39; \u0026#39;White\u0026#39; = \u0026#39;#FFFFFF\u0026#39; \u0026#39;Gray\u0026#39; = \u0026#39;#C0C0C0\u0026#39; } Set-PoshPrompt -Colors $Colors This will change the prompt colors to a custom set of colors. You can also add additional modules and customizations to your profile as needed.\nCongratulations! You\u0026rsquo;ve now installed and configured Oh My Posh. Enjoy your personalized PowerShell prompt!\n","permalink":"https://guangchen811.github.io/install/oh-my-posh/","summary":"If you\u0026rsquo;re a Windows user and looking for a way to customize your PowerShell prompt, then Oh My Posh might be just what you need. Oh My Posh is an open-source, community-driven framework for managing your PowerShell prompt configuration. In this tutorial, we will go through the steps to install and configure Oh My Posh.\nPrerequisites Windows 10 or above PowerShell 5 or above .NET Framework 4.7.2 or above Git Installation Open PowerShell with administrative privileges.","title":"Oh My Posh"},{"content":"Description You are given an array trees where trees [i] = [xi, yi] represents the location of a tree in the garden.\nYou are asked to fence the entire garden using the minimum length of rope as it is expensive. The garden is well fenced only if all the trees are enclosed.\nReturn the coordinates of trees that are exactly located on the fence perimeter.\nFor example: Input: points = [[1,1],[2,2],[2,0],[2,4],[3,3],[4,2]] Output: [[1,1],[2,0],[3,3],[2,4],[4,2]] Intuition This problem is a typical Convex Hull Algorithm. There are many common Algorithm to solve this kind of problem. Let\u0026rsquo;s describe Jarvis Algorithm, Graham Algorithm, Andrew Algorithm at here.\nAlgorithm Jarvis Algorithm The idea of Jarvis Algorithm is simple. We begin as the node which must on the contex hull, for example, the leftmost point $A_1$. Then we choose $A_2$ to ensure all nodes are on the left(right) side of the link $\\vec{AB}$. Repat the process to find $A_3, A_4, A_5,\\cdots$.\nCode class Solution { public: int cross(vector\u0026lt;int\u0026gt; \u0026amp; p, vector\u0026lt;int\u0026gt; \u0026amp; q, vector\u0026lt;int\u0026gt; \u0026amp; r) { return (q[0] - p[0]) * (r[1] - q[1]) - (q[1] - p[1]) * (r[0] - q[0]); } vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; outerTrees(vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; trees) { int n = trees.size(); if (n \u0026lt; 4) { return trees; } int leftMost = 0; for (int i = 0; i \u0026lt; n; i++) { if (trees[i][0] \u0026lt; trees[leftMost][0]) { leftMost = i; } } vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; res; vector\u0026lt;bool\u0026gt; visit(n, false); int p = leftMost; do { int q = (p + 1) % n; for (int r = 0; r \u0026lt; n; r++) { /* If r is on the right of pq，q = r */ if (cross(trees[p], trees[q], trees[r]) \u0026lt; 0) { q = r; } } /* Is there a node i, to make p 、q 、i on a line. */ for (int i = 0; i \u0026lt; n; i++) { if (visit[i] || i == p || i == q) { continue; } if (cross(trees[p], trees[q], trees[i]) == 0) { res.emplace_back(trees[i]); visit[i] = true; } } if (!visit[q]) { res.emplace_back(trees[q]); visit[q] = true; } p = q; } while (p != leftMost); return res; } }; Complexity Analysis Time Complexity: $O(n^2)$ Space Complexity: $O(n)$ ","permalink":"https://guangchen811.github.io/leetcode/erect-the-fence/","summary":"No.587","title":"Erect the Fence"},{"content":"Description Given an array of positive integers nums and a positive integer target return the minimal legth of a contiguous subarray of which the sum is greater than or equal to target. If there is no such subarray, return 0 instead.\nIntuition We could keep 2 pointer, one for the start and the other for the end of current subarray, and make optimal moves so as to keep the sum greater than s as well as maintain the lowest size possible.\nAlgorithm Code class Solution { public: int minSubArrayLen(int target, vector\u0026lt;int\u0026gt;\u0026amp; nums) { int n = nums.size(); int ans = INT_MAX; int left = 0; int sum = 0; for (int i = 0; i \u0026lt; n; i++) { sum += nums[i]; while (sum \u0026gt;= target) { ans = min(ans, i + 1 -left); sum -= nums[left++]; } } return (ans != INT_MAX) ? ans : 0; } }; Complexity Analysis Time Complexity: $O(n)$ Space Complexity: $O(1)$ ","permalink":"https://guangchen811.github.io/leetcode/minimum-size-subarray-sum/","summary":"No.209","title":"Minimum Size Subarray Sum"},{"content":"Description Given the root of a binary search tree, rearrange the tree in in-order so that the left most node in the tree is now the root of the tree, and every node has no left child and only one right child.\nIntuition If root.left is not None, make root.left as root and root.left.right as root.left recursively.\nAlgorithm Code # Definition for a binary tree node. # class TreeNode: # def __init__(self, val=0, left=None, right=None): # self.val = val # self.left = left # self.right = right class Solution: def increasingBST(self, root: TreeNode) -\u0026gt; TreeNode: if root == None: return None if root.left == None: root.right = self.increasingBST(root.right) return root node = root.left root.left = node.right node.right = root return self.increasingBST(node) Complexity Analysis Time Complexity: $O(n)$ Space Complexity: $O(1)$ ","permalink":"https://guangchen811.github.io/leetcode/increasing-order-search-tree/","summary":"No.897","title":"Increasing Order Search Tree"},{"content":"Description Given the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST.\nIntuition Visit nodes according to the value from largest to smallest. Maintain a global variable SUM.\nAlgorithm Pseudocode Initial a global variable SUM.\nVisit root node using the follow function:\nIf root is Null, return.\nvisit root.right.\nSUM += root.val.\nroot.val = SUM.\nvisit root.left.\nCode # Definition for a binary tree node. # class TreeNode: # def __init__(self, val=0, left=None, right=None): # self.val = val # self.left = left # self.right = right class Solution: def convertBST(self, root: Optional[TreeNode]) -\u0026gt; Optional[TreeNode]: self.SUM = 0 self.visit(root) return root def visit(self, root): if root == None: return self.visit(root.right) self.SUM += root.val root.val = self.SUM self.visit(root.left) Complexity Analysis Time Complexity: $O(n)$ Space Complexity: $O(1)$ ","permalink":"https://guangchen811.github.io/leetcode/convert-bst-to-greater-tree/","summary":"No.538","title":"Convert BST to Greater Tree"},{"content":"Description Given an array of integers nums and an integer k. A continuous subarray is called nice if there are k odd numbers on it.\nReturn the number of nice sub-arrays.\nIntuition We can replace odds with 1 and evens with o, and then generate a list cur_odd. cur_odd[i] is equal to the number of odds until i. Now, we just need to count the number of pairs in cur_odd which difference is equal to k.\nAlgorithm In fact, it\u0026rsquo;s not necessary to build cur_odd explicitly. A hash map can make things easier.\nPseudocode Initial a map as {0:1}.\nInitial current odd numbers as 0.\nInitial answer as 0.\nFor each number in numbers.\nIf the number is a odd\nLet cur_odd add one.\nElse, if current odd numbers - k in the map.\nLet the answer add map[current odd numbers - k] Else, if current odd numbers not in the map.\nSet map[current odd numbers] as 0.\nLet map[current odd numbers] add one.\nreturn the answer.\nCode class Solution: def numberOfSubarrays(self, nums: List[int], k: int) -\u0026gt; int: mp = {0:1} cur_odd = 0 ans = 0 for num in nums: if num % 2 == 1: cur_odd += 1 if cur_odd-k in mp: ans += mp[cur_odd-k] if not cur_odd in mp: mp[cur_odd] = 0 mp[cur_odd] += 1 return ans Complexity Analysis Time Complexity: $O(n)$ Space Complexity: $O(n)$ ","permalink":"https://guangchen811.github.io/leetcode/count-number-of-nice-subarrays/","summary":"No.1248","title":"Count Number of Nice Subarrays"},{"content":"Description You are given two strings s1 and s2 of equal length consisting of letters \u0026quot;x\u0026quot; and \u0026quot;y\u0026quot; only. Your task is to make these two strings equal to each other. You can swap any two characters that belong to different strings, which means: swap s1[i] and s2[j].\nReturn the minimum number of swaps required to make s1 and s2 equal, or return -1 if it is impossible to do so.\nIntuition Given a index i, there are totally 4 possiblilities of s1[i] and s2[i]: x-x,y-y,x-yandy-x. x-x and y-y have been matched, we just need to process two other situations.\nAlgorithm Assum there are a pairs of x-y and b pairs of y-x. For 2 pairs of x-y or y-x, we can swap 1 steps to make them matching: \u0026quot;xx\u0026quot;|\u0026quot;yy\u0026quot;$\\rightarrow$\u0026quot;xy\u0026quot;|\u0026quot;xy\u0026quot;. For one x-y and one y-x, we need 2 steps: \u0026quot;xy\u0026quot;|\u0026quot;yx\u0026quot;$\\rightarrow$\u0026quot;xx\u0026quot;|\u0026quot;yy\u0026quot;$\\rightarrow$\u0026quot;xy\u0026quot;|\u0026quot;xy\u0026quot;.\nSo, if a and b are both even. We just need $\\frac{a+b}{2}$ steps without other process.\nIf one of a and b is even and the other is odd, we can\u0026rsquo;t make it match any way.\nIf their are both odd, we need $\\frac{a+b-2}{2}+2=\\frac{a+b}{2}+1$ steps.\nPseudocode Read s1 and s2 to get a and b.\nIf only one of a and b is even, return -1.\nElse if both a and b are even, return $\\frac{a+b}{2}$.\nElse return $\\frac{a+b}{2}+1$\nCode class Solution: def minimumSwap(self, s1: str, s2: str) -\u0026gt; int: a = 0 b = 0 for i in range(len(s1)): if s1[i] == \u0026#39;x\u0026#39; and s2[i] == \u0026#39;y\u0026#39;: a += 1 elif s1[i] == \u0026#39;y\u0026#39; and s2[i] == \u0026#39;x\u0026#39;: b += 1 if a%2==0 and b%2==0: return int((a+b)/2) elif a%2==1 and b%2==1: return int((a+b)/2+1) else: return -1 Complexity Analysis Time Complexity: $O(n)$. Space Complexity: $O(1)$. ","permalink":"https://guangchen811.github.io/leetcode/minimum-swaps-to-make-strings-equal/","summary":"No.1247","title":"Minimum Swaps to Make Strings Equal"},{"content":"Description You are given the root of a binary search tree (BST) and an integer val.\nFind the node in the BST that the node\u0026rsquo;s value equals val and return the subtree rooted with that node. If such a node does not exist, return null.\nIntuition There are only two possibilities when we searching a node:\nnode is equal to the value node is not equal to the value Algorithm When the node is equal to the value, we just need to return it. Otherwise, we just need to visit its left or right child recursively.\nPseudocode visit root node.\nIf root is null or root\u0026rsquo;s value is equal to target value, return the root.\nOtherwises, if root\u0026rsquo;s value is bigger than target value.\nvisit root\u0026rsquo;s left child.\nOtherwises\nvisit root\u0026rsquo;s right child.\nCode # Definition for a binary tree node. # class TreeNode: # def __init__(self, val=0, left=None, right=None): # self.val = val # self.left = left # self.right = right class Solution: def searchBST(self, root: Optional[TreeNode], val: int) -\u0026gt; Optional[TreeNode]: if (root == None or root.val == val): return root elif root.val \u0026lt; val: return self.searchBST(root.right, val) else: return self.searchBST(root.left, val) Complexity Analysis Time Complexity: $O(\\log{n})$ Space Complexity: $O(1)$ ","permalink":"https://guangchen811.github.io/leetcode/searchinabinarysearchtree/","summary":"No.700","title":"Search in a Binary Seaerch Tree"},{"content":"Description You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\nIntuition Keep track of the carry using a variable and simulate digits-by-digits sum starting from the head of list, which contains the least-significant digit.\nAlgorithm Just like how we would sum two numbers on a piece of paper, we begin by summing the least-significant digits, which is the head of $l1$ and $l2$. Since each digit is in the range of 0\u0026hellip;9, summing two digits may \u0026ldquo;overflow\u0026rdquo;. For example $5+7=12$. In this case, we set the current digit to 2 and bring over the $carry=1$ to the next iteration. $carry$ must be either $0$ or $1$ because the largest possible sum of two digits (including the carry) is $9+9+1=19$.\nPseudocode Initialize current node to dummy head of the returning list.\nInitialize $carry$ to 0.\nInitialize $p$ and $q$ to head of $l1$ and $l2$ respectively. Loop through lists $l1$ and $l2$ until you reach both ends.\nSet $x$ to node $p$\u0026rsquo;s value. If $p$ has reached the end of $l1$, set to 0.\nSet $y$ to node $q$\u0026rsquo;s value. If $q$ has reached the end of $l2$, set to 0.\nSet $sum=x+y+carry$.\nUpdate $carry = sum/10$\nCreate a new node with teh digit value of ($sum\\mod{10}$) and set it to current node\u0026rsquo;s next, then advance current node to next.\nAdvance both $p$ and $q$.\nCheck if $carry=1$, if so append a new node with digit 1 to the returning list.\nReturn dummy head\u0026rsquo;s next node.\nCode # Definition for singly-linked list. # class ListNode: # def __init__(self, val=0, next=None): # self.val = val # self.next = next class Solution: def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -\u0026gt; Optional[ListNode]: dummyHead = ListNode(val=0) p = l1 q = l2 curr = dummyHead carry = 0 while(p != None or q != None): if p != None: x = p.val else: x = 0 if q != None: y = q.val else: y = 0 sum = carry + x + y carry = sum // 10 curr.next = ListNode(val=sum % 10) curr = curr.next if(p != None): p = p.next if(q != None): q = q.next if (carry \u0026gt; 0): curr.next = ListNode(carry) return dummyHead.next Complexity Analysis Time Complexity: $O(\\max{(m,n)})$. Assume that $m$ and $n$ represents the length of $l1$ and $l2$ respectively, the algorithm above iterates at most $\\max{(m,n)}$ times.\nSpace Complexity: $O(\\max{(m,n)})$. The length of the new list is at most $\\max{(m,n)}+1$.\n","permalink":"https://guangchen811.github.io/leetcode/add-two-numbers/","summary":"No.2","title":"Add Two Numbers"}]